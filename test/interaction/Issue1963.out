(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-close-warning)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue1963 (Issue1963.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Product (Product.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Level (Level.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Level. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Product. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Bool (Bool.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Bool (agda-default-include-path/Agda/Builtin/Bool.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Bool. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Bool. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : .A × .A ?1 : Bool ?2 : Bool ?3 : Bool → Bool ?4 : .A × .A ?5 : Bool " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action '("pair a .proj₁ = ?" "pair a .proj₂ = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action '("neg .out false = ?" "neg .out true = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action '("out neg2 false = ?" "out neg2 true = ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action-extendlam '(".out x → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action-extendlam '("a .proj₁ → ?" "a .proj₂ → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
((last . 2) . (agda2-make-case-action-extendlam '(".out false → ?" ".out true → ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3 4 5)))
