(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue2280 (Issue2280.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Equality (Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.Equality (agda-default-include-path/Agda/Builtin/Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.Equality. " t)
(agda2-info-action "*Type-checking*" " Checking Agda.Builtin.TrustMe (agda-default-include-path/Agda/Builtin/TrustMe.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Agda.Builtin.TrustMe. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Level (Level.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Level. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Equality. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Product (Product.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Product. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool → Bool ?1 : Bool ?2 : Bool × Bool ?3 : Bool " nil)
((last . 1) . (agda2-goals-action '(0 1 2 3)))
((last . 2) . (agda2-solveAll-action '(1 "not ?" 3 "not ?")))
((last . 1) . (agda2-goals-action '(0 1 2 3)))
