(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue1842 (Issue1842.agda). " t)
(agda2-info-action "*Type-checking*" "Finished Issue1842. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : Bool " nil)
((last . 1) . (agda2-goals-action '(0)))
(agda2-verbose "splitting clause: f = test context = (x₁ : Bool) tel = (x₁ : Bool) perm = x0 -> x0 ps = [r(x = VarP (0,\"x\"))] ")
(agda2-verbose "Interaction.MakeCase.makeCase: split clause: context = (x₁ : Bool) tel = ps = [r(x = ConP Issue1842.Bool.true(inductive)[] (ConPatternInfo {conPRecord = Nothing, conPType = Nothing}) [])] ")
(agda2-verbose "Interaction.MakeCase.makeCase: split clause: context = (x₁ : Bool) tel = ps = [r(x = ConP Issue1842.Bool.false(inductive)[] (ConPatternInfo {conPRecord = Nothing, conPType = Nothing}) [])] ")
(agda2-verbose "split result: Clause {clauseLHS = LHS {lhsInfo = LHSRange , lhsCore = LHSHead {lhsDefName = Issue1842.test, lhsPats = [r(ConP PatRange (AmbQ {unAmbQ = [Issue1842.Bool.true]}) [])]}, lhsWithPats = []}, clauseRHS = RHS (QuestionMark (MetaInfo {metaRange = , metaScope = ScopeInfo current = context = TopCtx modules scope , metaNumber = Nothing, metaNameSuggestion = \"\"}) ?-1), clauseWhereDecls = [], clauseCatchall = False} Clause {clauseLHS = LHS {lhsInfo = LHSRange , lhsCore = LHSHead {lhsDefName = Issue1842.test, lhsPats = [r(ConP PatRange (AmbQ {unAmbQ = [Issue1842.Bool.false]}) [])]}, lhsWithPats = []}, clauseRHS = RHS (QuestionMark (MetaInfo {metaRange = , metaScope = ScopeInfo current = context = TopCtx modules scope , metaNumber = Nothing, metaNameSuggestion = \"\"}) ?-1), clauseWhereDecls = [], clauseCatchall = False} ")
((last . 2) . (agda2-make-case-action '("test true = ?" "test false = ?")))
((last . 1) . (agda2-goals-action '(0)))
