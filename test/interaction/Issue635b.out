Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Issue635b (Issue635b.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Prelude (Prelude.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Level (Level.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Level. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Char (Char.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Bool (Bool.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Bool. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Char. " t)
(agda2-info-action "*Type-checking*" " Checking Common.String (String.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.List (List.agda). " t)
(agda2-info-action "*Type-checking*" " Checking Common.Nat (Nat.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Nat. " t)
(agda2-info-action "*Type-checking*" " Finished Common.List. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Integer (Integer.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Integer. " t)
(agda2-info-action "*Type-checking*" " Finished Common.String. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Unit (Unit.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Unit. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Float (Float.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Float. " t)
(agda2-info-action "*Type-checking*" " Checking Common.IO (IO.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.IO. " t)
(agda2-info-action "*Type-checking*" " Finished Common.Prelude. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Product (Product.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Product. " t)
(agda2-info-action "*Type-checking*" " Checking Common.Equality (Equality.agda). " t)
(agda2-info-action "*Type-checking*" " Finished Common.Equality. " t)
(agda2-info-action "*Type-checking*" "Finished Issue635b. " t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : update (.ρ , .a₁ < .b ∣ .p) vz (max (↑ .a - .n)) ≤V (.ξ , .a' < .b ∣ .q) ?1 : update (.ρ , .a₁ < .b ∣ .p) (vs x) (max (↑ .a - .n)) ≤V (.ξ , .a' < .b ∣ .q) " nil)
((last . 1) . (agda2-goals-action '(0 1)))
Agda2> ((last . 2) . (agda2-make-case-action '("lemma-str vz {a = .zero ⊕ n₁} (_,_ {a' = .zero ⊕ n₂} p₁ s) (leZZ p₂) = ?" "lemma-str vz {a = .zero ⊕ n₁} (_,_ {a' = .∞ ⊕ n₂} p₁ s) leZ∞ = ?" "lemma-str vz {a = .∞ ⊕ n₁} (_,_ {a' = .∞ ⊕ n₂} p₁ s) (le∞∞ p₂) = ?")))
((last . 1) . (agda2-goals-action '(0 1)))
Agda2> 