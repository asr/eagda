Agda2> (agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-info-action "*Type-checking*" "Checking Auto-Misc (Auto-Misc.agda).\n" t)
(agda2-info-action "*Type-checking*" " Checking Auto.Prelude (Auto/Prelude.agda).\n" t)
(agda2-info-action "*Type-checking*" " Finished Auto.Prelude.\n" t)
(agda2-info-action "*Type-checking*" "Finished Auto-Misc.\n" t)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : (x₁ x₂ : ⊥) → x₁ ≡ x₂\n?1 : .B\n?2 : .A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-give-action 0 "λ x₁ → λ ()")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?1 : .B\n?2 : .A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-give-action 1 "(Σ.prf h)")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?2 : .A\n" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> (agda2-give-action 2 "(Σ.wit h)")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "" nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
Agda2> Agda2> 