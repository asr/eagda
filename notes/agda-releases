When releasing a new version of Agda, the following procedure can be
followed:

* Update in the bug tracker the milestone field of open issues to the
  next Agda version. (If the label for the next milestone version
  (e.g. Milestone-2.4.6) does not exist, create an issue asking for
  it).

* Get a clean Agda repository.

    git clone git@github.com:agda/agda Agda.release
    cd Agda.release

* Clone the standard library branch related to the Agda new version.

    make std-lib

* Create Everything.agda in the standard library

    cd std-lib
    make Everything.agda
    cd ..

* Finish the release notes in
  doc/release-notes/<version-written-with-dashes>.txt.

  Copy the contents of the release notes to the top of the CHANGELOG file.

* Update README.md, if necessary.

* Update the LICENSE file, if necessary.

* Update the version numbers in Agda.cabal (twice),
  src/data/emacs-mode/agda2-mode.el, mk/version.mk.

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda
      tag:      <version>

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Remove the Cabal test-suite:

  ** Remove the agda-tests test suite in Agda.cabal.

  ** Remove --enable-tests from the install-bin rule in Makefile.

  ** Remove exec-test from the tests rule in Makefile.

* Ensure that cabal haddock works (requires at least cabal-install
  version 1.20.0.3 using version 1.20.0.2 of the Cabal library):

    cabal configure && cabal haddock

* Ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning):

    (cd src/data/emacs-mode && \
    for file in *.el; do \
        emacs --batch -L . -f batch-byte-compile $file; \
        rm -f $(basename $file .el).elc; done)

* Disable sharing by default. Note that this change induces some
  changes in the test suite.

  N.B. that succeed/Issue1351.agda fails when sharing is disable.

  ** Disable sharing by default in the Agda.Interaction.Options
     module.

  ** Change the message "(default: ON)" to "(default: OFF)" in the
     above module.

* Test compilation using cpp instead of cpphs:

    make install-bin CABAL_OPTS='-f -cpphs'
    make clean

* Run make test (and accept the updates the Agda version in the files
  test/interaction/Issue1244a.out and test/interaction/Issue1244b.out).

* Tag and build source distributions. (Do not forget to commit the
  changes above first.)

    VERSION=<version>
    cabal configure
    cabal check
    cabal sdist
    cabal install
    git tag -a $VERSION -m "Agda $VERSION release"

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    cabal configure
    cabal install

  Do not forget to test the Emacs mode.

* Upload the Cabal package using cabal upload.

    cd $BASE
    cabal upload dist/Agda-$VERSION.tar.gz

* Push the release to github

  git push
  git push --tags

* Restore the Cabal test-suite:

  ** Restore the agda-tests test suite in Agda.cabal.

  ** Add --enable-tests to the install-bin rule in Makefile.

  ** Add exec-test to the tests rule in Makefile.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Remove the "this" source-repository section from the Cabal
  file. (This would be unnecessary if we had two repositories, one
  stable and one for development.)

* Create a maintenance branch

    git checkout -b maint-$VERSION

* Update the version numbers in the maintenance branch to $VERSION.1.

    Agda.cabal (twice)
    src/data/emacs-mode/agda2-mode.el
    mk/version.mk
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Add program suffix option to Makefile on maintenance branch
    CABAL_OPTS+=--program-suffix=-$(VERSION)

* Update the branches whitelist in .travis.yml.

* Update with maint-$VERSION the branch used for reporting the build
  status in README.md.

* Commit the above changes.

* Merge maint-$VERSION. Comment the CABAL_OPTS line in
  the Makefile.

    git checkout master
    git merge maint-$VERSION

* Update the version numbers in master.

    Agda.cabal (twice)
    src/data/emacs-mode/agda2-mode.el
    mk/version.mk
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Remove the release notes for the released version from doc/release-notes and
  create a template for the next version.

* Enable sharing by default. Note that this change induces some
  changes in the test suite.

  ** Enable sharing by default in the Agda.Interaction.Options module.

  ** Change the message "(default: OFF)" to "(default: ON)" in the
     above module.

* Push all changes

    git push
    git checkout maint-$VERSION
    git push -u origin maint-$VERSION

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Release Notes page (under Documentation).

  ** Update the Main page.

* Announce the release of the new version on the Agda mailing lists
  (users and developers).
