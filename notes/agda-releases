When releasing a new version of Agda, the following procedure can be
followed:

* First, release a release candidate (see
  notes/agda-releases-candidates).

* Update in the bug tracker the milestone field of open issues to the
  next Agda version.

* Verify that the Travis builds have no errors.

* Get a clean Agda repository.

    git clone git@github.com:agda/agda agda.release
    cd agda.release

* Obtain and install the standard library branch related to the Agda
  new version.

    make up-to-date-std-lib

* Clone the standard library branch related to the Agda new version:

    make std-lib

* Finish the CHANGELOG.

* Update README.md, if necessary.

* Update the LICENSE file, if necessary.

* Update the version number in:

    .ghci
    Agda.cabal (twice)
    default.nix
    doc/user-manual/conf.py
    mk/version.mk
    src/data/emacs-mode/agda2-mode.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda/tree/<version>
      tag:      <version>

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Ensure that cabal haddock works for the GHC versions don't support
  by Travis:

    cabal configure && cabal haddock

* Remove the Cabal test-suite from Agda.cabal.

* Disable sharing by default. Note that this change induces some
  changes in the test suite.

  N.B. that succeed/Issue1351.agda fails when sharing is disable.

  ** Disable sharing by default in the Agda.Interaction.Options
     module.

  ** Change the message "(default: ON)" to "(default: OFF)" in the
     above module.

* Ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning):

    agda-mode compile

* Run make test (and accept the updates the Agda version in the files
  test/interaction/Issue1244a.out and test/interaction/Issue1244b.out).

* Tag and build source distributions. (Do not forget to commit the
  changes above first.)

    VERSION=<version>
    cabal configure
    cabal check
    cabal sdist
    cabal install
    git tag -a $VERSION -m "Agda $VERSION release"

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    cabal install

  Do not forget to test the Emacs mode.

* Upload the Cabal package using cabal upload.

    cd $BASE
    cabal upload dist/Agda-$VERSION.tar.gz

* Push the release to github

  git push
  git push --tags

* Restore the Cabal test-suite in Agda.cabal.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Remove the "this" source-repository section from the Cabal
  file. (This would be unnecessary if we had two repositories, one
  stable and one for development.)

* Create a maintenance branch

    git checkout -b maint-$VERSION

* Update the version number in the maintenance branch to $VERSION.1
  in:

    .ghci
    Agda.cabal (twice)
    default.nix
    doc/user-manual/conf.py
    mk/version.mk
    src/data/emacs-mode/agda2-mode.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Add program suffix option to Makefile on maintenance branch:

    CABAL_OPTS+=--program-suffix=-$(VERSION)

* Update the branches whitelist in .travis.yml.

* Update with maint-$VERSION the branch used for reporting the build
  status in README.md.

* Commit the above changes.

* Merge maint-$VERSION. Comment the CABAL_OPTS line in
  the Makefile.

    git checkout master
    git merge maint-$VERSION

* Update the version numbers in master.

    Agda.cabal (twice)
    src/data/emacs-mode/agda2-mode.el
    mk/version.mk
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Remove the release notes for the released version from doc/release-notes and
  create a template for the next version.

* Enable sharing by default. Note that this change induces some
  changes in the test suite.

  ** Enable sharing by default in the Agda.Interaction.Options module.

  ** Change the message "(default: OFF)" to "(default: ON)" in the
     above module.

* Push all changes

    git push
    git checkout maint-$VERSION
    git push -u origin maint-$VERSION

* Disable force push on the maint-$VERSION branch, see

  https://help.github.com/articles/about-protected-branches/
  https://github.com/agda/agda-stdlib/settings/branches

* Close in the bug tracker the milestone VERSION.

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Release Notes page (under Documentation).

  ** Update the Main page.

* Announce the release of the new version on the Agda mailing lists
  (users and developers).
