2015-05-15, adapted from agda-releases

When releasing a bugfix version of Agda, the following procedure can be
followed:

* Update in the bug tracker the milestone field of open issues to the
  next Agda version. (If the label for the next milestone version
  (e.g. Milestone-2.4.6) does not exist, create an issue asking for
  it).

* Get a clean Agda repository.

    MAJORVERSION=<current-Agda-version-eg-2.4.0>
    VERSION=<current-maintenance-version-eg-2.4.0.2>
    git clone git@github.com:agda/agda.git agda.release
    cd agda.release
    git checkout maint-$MAJORVERSION

* Clone the standard library branch related to the Agda bugfix
  version.

    make std-lib

* Create Everything.agda in the standard library

    cd std-lib
    make Everything.agda
    cd ..

* Finish the CHANGELOG.

* Update the README.md, if necessary.

* Update the LICENSE file, if necessary.

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda
      tag:      $VERSION

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Remove the Cabal test-suite:

  ** Remove the agda-tests test suite in Agda.cabal.

  ** Remove --enable-tests from the install-bin rule in Makefile.

  ** Remove exec-test from the tests rule in Makefile.

* Ensure that cabal haddock works (requires at least cabal-install
  version 1.20.0.3 using version 1.20.0.2 of the Cabal library):

    cabal configure && cabal haddock

* Ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning):

    (cd src/data/emacs-mode && \
      emacs --batch -L . -f batch-byte-compile *.el; \
      rm -f *.elc)

* Test compilation using cpp instead of cpphs:

    make install-bin CABAL_OPTS='-f -cpphs'
    make clean

* Run the test-suite:

    make install
    make test

* Build source distributions:

    cabal configure
    cabal check
    cabal sdist
    cabal install

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    VERSION=<version>
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$VERSION.tar.gz
    cd Agda-$VERSION
    cabal install

  Do not forget to test the Emacs mode.

* Tag the relase (do not forget to record the changes above first):

    cd $BASE
    git tag -a $VERSION -m "Agda $VERSION maintenance release"

* Upload the Cabal package using cabal upload.

    cd $BASE
    cabal upload dist/Agda-$VERSION.tar.gz

* Remove the "this" source-repository section from the Cabal
  file. (This would be unnecessary if we had two repositories, one
  stable and one for development.)

* Restore the Cabal test-suite:

  ** Restore the agda-tests test suite in Agda.cabal.

  ** Add --enable-tests to the install-bin rule in Makefile.

  ** Add exec-test to the tests rule in Makefile.

* Add back -Werror and -fprof-auto in Agda.cabal.

* Add a new header to CHANGELOG.

* Update the version numbers in:

  Agda.cabal (twice),
  src/data/emacs-mode/agda2-mode.el, and
  mk/version.mk.
  test/interaction/Issue1244a.out
  test/interaction/Issue1244b.out

* Push all changes and merge into 'master' branch (requires Git >= 1.8.3).

    git push --follow-tags

    git checkout master
    git merge maint-$MAJORVERSION

* Restore version numbers in 'master'
  (possibly by just resolving the merge conflicts).

    Agda.cabal (twice),
    src/data/emacs-mode/agda2-mode.el, and
    mk/version.mk.

* Push master

    git push

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Release Notes page (under Documentation).

  ** Update the Main page.

  ** Update the standard library page (tested with Agda $VERSION).

* Announce the release of the new version on the Agda mailing list.
