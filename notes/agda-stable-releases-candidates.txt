When releasing a release candidate (RC) for a stable version of Agda,
the following procedure can be followed:

* Finish the CHANGELOG.

* Update the README.md, if necessary.

* Update the list of contributors if necessary.

  Note: This is duplicated in the following locations:

  - Agda.cabal
  - doc/user-manual/license.rst
  - doc/user-manual/conf.py

* Update the LICENSE file, if necessary.

* Update Stackage resolvers, if necessary.

* Verify that the Travis builds have no errors.

* Get a clean Agda repository.

    MAJORVERSION=<current-development-version-eg-2.4.2>
    VERSION=<current-released-version-eg-2.4.0.2>
    git clone git@github.com:agda/agda.git agda-release
    cd agda-release
    git checkout stable-$MAJORVERSION

* Create the branch used for the release

    git checkout -b release-$MAJORVERSION

* The version of the RC is $VERSION + current date

    RC_VERSION=<current-released-version-current-date-eg-2.4.0.2.20150913>

* Change $MAYOR_VERSION to $RC_VERSION in:

    .ghci
    Agda.cabal
    default.nix
    /doc/user-manual/conf.py
    mk/versions.mk
    src/data/emacs-mode/agda2-mode.el
    src/data/emacs-mode/agda2-mode-pkg.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Obtain and install the standard library branch related to the Agda
  bugfix version:

    make up-to-date-std-lib

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Run the test-suite:

    make compile-emacs-mode
    make test

  Note that "compile-emacs-mode" invokes "agda-mode compile", which should
  ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning).

* Remove the Cabal test-suite from Agda.cabal.

* Update the user manual:

    make user-manual-pdf

* Build source distributions:

    cabal configure
    cabal check
    cabal sdist

* Build documentation for uploading to Hackage. Adapted from
  https://hackage.haskell.org/upload (2018-05-19):

    cabal haddock --for-hackage --haddock-option=--hyperlinked-source

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$RC_VERSION.tar.gz
    cd Agda-$RC_VERSION
    cabal install

  Do not forget to test the Emacs mode.

* Upload to Hackage the RC (tested with cabal-install >= 2.0.0.0):

    cd $BASE
    cabal upload dist/Agda-$RC_VERSION.tar.gz
    cabal upload -d dist/Agda-$RC_VERSION-docs.tar.gz

* Tag the release candidate (do not forget to record the changes above
  first):

    cd $BASE
    git tag -a v$RC_VERSION -m "Agda $MAJORVERSION release candidate n"

* Restore the Cabal tests-suites `agda-tests` and `internal-tests`
  from Agda.cabal.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Restore the version number $MAJOR_VERSION in:

    .ghci
    Agda.cabal
    default.nix
    /doc/user-manual/conf.py
    mk/versions.mk
    src/data/emacs-mode/agda2-mode.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Push all changes (in the release-$MAJORVERSION branch):

    git push --set-upstream --follow-tags

* Announce the release candidate on the Agda mailing lists (users and
  developers).
